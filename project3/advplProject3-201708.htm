<!DOCTYPE doctype PUBLIC "-//w3c//dtd html 4.0 transitional//en">
<html><head>







        
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        
  <meta name="Author" content="John coffey">
        
  <meta name="GENERATOR" content="Mozilla/4.61 [en] (WinNT; U) [Netscape]"><title>Advanced Programming Languages Projects</title></head><body>
<center><span style="font-size: 14pt;"><b><span size="+1">Advanced Programming languages</span></b> </span><br /> <b><span size="+1" style="font-size: xx-small;"><span style="font-size: 14pt;">Programming Project 3</span><br /> </span></b></center>
<p><b>Project #3 - A Parser Generator Project.</b></p>
<p><b>yacc/lex Compiler Front End.</b></p>
<p>You will rewrite the grammar from your compiler into a left-recursive format typical of LR parsers. Implement a parser for the LR version of the grammar using yacc and lex. I will expect you to have four separate files for your parser:&nbsp; a .l file from lex and a .y file from yacc, a header file with necessary constants for token types, and a <span style="font-family: monospace;">makefile</span> for the project.</p>
<p>In class we will discuss the use of lexical analyzer/parser generators and you will be provided with examples of simple programs which you will extend.<b><br /> <br /> </b><b>Input and Output<br /> </b>There will be no user interaction with the program. The program will be invoked 8 times from a shell script as demonstrated in class (see below in deliverables). Input will be via command line parameter of the file to be parsed, specified in the script file. The final legal program must demonstrate proper identifier processing, nested expression processing and control constructs nested inside others.Output will be to the console reporting either a successful parse or a syntax error message.<br /> <b><br /></b><b> Other Policies</b> <br /> All projects will be individual.</p>
<p><b>Deliverables:</b><span style="font-weight: bold;"><br /> </span></p>
<p>You will submit all your work in a .zip file to the DropBox for the course on <tt>elearning.uwf.edu.</tt> Place <span style="font-style: italic;">all your files</span> in a single directory named <span style="font-family: monospace;"><br /> <br /> &nbsp;&nbsp;&nbsp;&nbsp; &lt;firstInitial&gt;&lt;lastname&gt;-p&lt;projNumber&gt;.</span> <br /> <br /> For instance, my&nbsp; submission would be<span style="font-family: monospace;"> jcoffey-p3. </span>zip that folder into a .zip file and upload it to the appropriate dropbox.<br /> <br /> So, submit a single zip file containing a single folder, with the following items in the folder:</p>
<ul>
<li>An updated version of the grammar of your language.</li>
<li>Your lex and yacc programs, the header file, and the makefile</li>
<li>A User's manual regarding exactly what this submission does and how to run it (and any problems or deficiencies the submission might have)</li>
<li>Four examples each of both legal and illegal programs of increasing complexity. The programs should be of increasing complexity, with the last demonstrating all features of your language.</li>
<li>A script that runs all legal and illegal programs as a batch, citing success or flagging the error.</li>
</ul>
<p>&nbsp;</p>
</body></html>